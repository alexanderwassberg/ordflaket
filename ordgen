#!/usr/bin/perl
# vim: ft=perl:fdm=marker:fmr=#<,#>:fen:et:sw=2:
use strict;
use warnings FATAL => 'all';
use vars     qw($VERSION);
use autodie  qw(:all);

use utf8;
use open qw(:std :utf8);

my $APP  = 'ordgen';
$VERSION = '0.002';

use Getopt::Long;
use Data::Dumper;

{
  package Data::Dumper;
  no strict 'vars';
  $Terse = $Indent = $Useqq = $Deparse = $Sortkeys = 1;
  $Quotekeys = 0;
}

my $opt = {
  'delimiter' => '-',
};

GetOptions(
  'd|delimiter:s' => \$opt->{delimiter},
  '1|single'      => \$opt->{single},
  'v|version'     => sub { printf "%s v%s\n", $0, $VERSION; exit },
  'h|help'        => sub {
    print <<"EOL";
    Usage: $0 [Option]

      -d, --delimiter   delimiter to use between words
      -1, --single      render a single word and exit

      -v, --version     display version info and exit
      -h, --help        display this help and exit
EOL
    exit;
  },
);


my $words = './words.txt';

open(my $fh, '<', $words) or die $!;

my %map;
while(<$fh>) {
  chomp;

  my ($k, $v) = split(/[- ]/, $_);
  $map{lc($k)} = lc($v);
}

for my $k(keys(%map)) {
  printf "%s%s%s\n", $k, $opt->{delimiter},  $map{(keys %map)[rand keys %map]};
  last if $opt->{single};
}
